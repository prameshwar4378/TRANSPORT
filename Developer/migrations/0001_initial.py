# Generated by Django 5.1 on 2025-02-09 11:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=100)),
                ('business_label', models.CharField(max_length=15)),
                ('mobile_number', models.CharField(max_length=15)),
                ('alternate_mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('business_number', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_name', models.CharField(max_length=255)),
                ('licence', models.FileField(blank=True, null=True, upload_to='driver_documents/licence/')),
                ('adhar_card', models.FileField(blank=True, null=True, upload_to='driver_documents/adhar_cards/')),
                ('document1', models.FileField(blank=True, null=True, upload_to='party_documents/other_documents/')),
                ('document2', models.FileField(blank=True, null=True, upload_to='party_documents/other_documents/')),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='driver_documents/profile_photos/')),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('alternate_mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Developer.business')),
            ],
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('gst_no', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='GST Number')),
                ('pan_card', models.FileField(blank=True, null=True, upload_to='party_documents/pan_cards/')),
                ('adhar_card', models.FileField(blank=True, null=True, upload_to='party_documents/adhar_cards/')),
                ('document1', models.FileField(blank=True, null=True, upload_to='party_documents/other_documents/')),
                ('document2', models.FileField(blank=True, null=True, upload_to='party_documents/other_documents/')),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('alternate_mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Developer.business')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_name', models.CharField(max_length=255)),
                ('owner_mobile_number', models.CharField(max_length=15)),
                ('owner_alternate_mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('pan_card', models.FileField(blank=True, null=True, upload_to='vehicle_owner_documents/pan_cards/')),
                ('adhar_card', models.FileField(blank=True, null=True, upload_to='vehicle_owner_documents/adhar_cards/')),
                ('document1', models.FileField(blank=True, null=True, upload_to='vehicle_owner_documents/other_documents/')),
                ('document2', models.FileField(blank=True, null=True, upload_to='vehicle_owner_documents/other_documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Developer.business')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_number', models.CharField(max_length=20, unique=True)),
                ('vehicle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('model_name', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('document1', models.FileField(blank=True, null=True, upload_to='vehicle_documents/')),
                ('document2', models.FileField(blank=True, null=True, upload_to='vehicle_documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Developer.business')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Developer.vehicleowner')),
            ],
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_number', models.CharField(editable=False, max_length=10, unique=True)),
                ('from_location', models.CharField(max_length=255, verbose_name='From Location')),
                ('to_location', models.CharField(max_length=255, verbose_name='To Location')),
                ('material_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Type of Material')),
                ('rent_amount', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Rent Amount')),
                ('advance_amount', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Advance Amount')),
                ('pending_amount', models.DecimalField(decimal_places=0, default=0, max_digits=10, verbose_name='Pending Amount')),
                ('commission', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=10, null=True, verbose_name='Commission')),
                ('commission_charge', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=10, null=True, verbose_name='Commission Amount')),
                ('commission_received', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=10, null=True, verbose_name='Commission Received')),
                ('commission_pending', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=10, null=True, verbose_name='Commission Pending')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Additional Notes')),
                ('bill_date', models.DateField(verbose_name='Bill Date')),
                ('commission_received_date', models.DateField(blank=True, null=True, verbose_name='Commission Received Date')),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Developer.business')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bills', to='Developer.driver', verbose_name='Driver')),
                ('party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bills', to='Developer.party', verbose_name='Party Name')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bills', to='Developer.vehicle', verbose_name='Vehicle')),
                ('reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referenced_bills', to='Developer.vehicleowner', verbose_name='Referenced By')),
            ],
            options={
                'verbose_name': 'Bill',
                'verbose_name_plural': 'Bills',
                'ordering': ['-bill_date'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_business', models.BooleanField(default=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Developer.business')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
